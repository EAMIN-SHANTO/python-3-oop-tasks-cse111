# -*- coding: utf-8 -*-
"""how to creat DICTONARY {}.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AKwCYIVvhoBqtTP3GovOtbLicNBgyWFU
"""

bmw = {'color':'gray,', 'door': 5, "price": 14000000}

print(bmw)

#access key and value
bmw = {'color':'gray', 'door': 5, "price": 14000000}


print(f"The color of bmw is: {bmw['color']} \n the price of bmw is:  {bmw['price']}")

#using 'get' function to get values or keys
bmw = {'color':'gray', 'door': 5, "price": 14000000}
bmw.get('door')

#add new key
bmw = {'color':'gray', 'door': 5, "price": 14000000}
bmw['owner'] = 'EAMIN'
print(bmw)

#print every "key" of the dictonary
bmw = {'color':'gray', 'door': 5, "price": 14000000}
bmw['owner'] = 'EAMIN'
for i in bmw:
  print(i)

#print every "value" of the dictonary
bmw = {'color':'gray', 'door': 5, "price": 14000000}
bmw['owner'] = 'EAMIN'
for i in bmw:
  print(bmw[i])

#print every value using value function of the dictonary
bmw = {'color':'gray', 'door': 5, "price": 14000000}
bmw['owner'] = 'EAMIN'
for i in bmw.values():
  print(i)

#print every key using value function of the dictonary
bmw = {'color':'gray', 'door': 5, "price": 14000000}
bmw['owner'] = 'EAMIN'
for i in bmw.keys():
  print(i)

#print key and values together using " .items() " function
bmw = {'color':'gray', 'door': 5, "price": 14000000}
bmw['owner'] = 'EAMIN'
for x,y in bmw.items():
  print(x,y)

#how to find sum of a list:
lis = [2,3,45]
total = 0
for i in lis:
  total +=i
print(total)

#remove an item form the dictonary  by using pop()
bmw = {'color':'gray', 'door': 5, "price": 14000000}
bmw['owner'] = 'EAMIN'
bmw.pop('door')
print(bmw)

"""DICTONATY  from user input"""

#quiz3 dixtonary input  
dic= {}
order_input = input("Enter your order: ")
order_input = order_input.split(',')

for i in order_input:
    quantity, types = i.split("x")
    quantity = int(quantity)
    print(f'BUrger:{types}, Quantity: {quantity}')

#take input form the user and make dictonary
dic= {}
lim = int(input("enter the limit: "))
for i in range(lim):
    key = input("enter key")
    value = input("enter value")
    dic[key] = value

print(dic)

dic = {}
val  = input("enter the names")
for i in val:
  key,value = val.split("x")

print("first name:", key)
print("last name:", value)

# from '3xspicy' to  type : spicy , quantity = 3
dic= {}
order_input = input("Enter your order: ")

order_input = order_input.split("x")
for i in (order_input):
   # order_input.split("x")
    
    quantity = order_input[0]
    quantity = int(quantity)
    types = order_input[1]
    dic[quantity] = types
print(f'BUrger:{types}, Quantity: {quantity}')

#creat a dictonary

dic= {}

inp_range= int(input("enter range: "))
for i in range(inp_range):
  key = input("enter key: ")
  values = input("enter values: ")
  dic[key] =values
print(dic)

#merge 2 diconaries:
dict1 = {'w': 50, 'x': 100, 'y': 'Green', 'z': 400}
dict2 = {'x': 300, 'y': 'Red', 'z': 600}
dict3= {}
dict3.update(dict1)
dict3.update(dict2)

print(dict3)

#how to merge 2 dictonaries having same key:
dic1 = {'a':100, 'b':200, 'c':300}

dic2 = {'a':1030, 'b':2300, 'c':3300}

for key in dic1:
    if key in dic2:
        dic2[key]= dic1[key]+dic2[key]
    else:
        dic2[key] = dic1[key]

print(dic2)

#dictonary with multiple value in a same key
num  = int(input("Enter range: "))
student={}
for i in range(num):
   
    name = input("enter name: ")
    math = input("enter marks: ")
    phy = input("enter marks: ")
    student[name] = math,phy # will became in a list
print(student)

#dictonary with multiple value in a same key
num  = int(input("Enter range: "))
student={}
for i in range(num):
   
    name = input("enter name: ")
    math = input("enter marks: ")
    phy = input("enter marks: ")
    student[name] = [math,phy]
print(student)

#Given dictionaries1:
#dict1 = {'w': 50, 'x': 100, 'y': 'Green', 'z': 400}
#dict2 = {'x': 300, 'y': 'Red', 'z': 600}
#Sample Output1:
#{'w': [50], 'x': [100, 300], 'y': ['Green', 'Red'], 'z': [400, 600]}


dict1 = {'w': 50, 'x': 100, 'y': 'Green', 'z': 400}
dict2 = {'x': 300, 'y': 'Red', 'z': 600}

a ={}
for i,j in dict1.items():
  a[i] = [j]
for i,j in dict2.items():
  a[i].append(j)

print(a)

dict1 = {'w': 50, 'y': 'Green', 'z': 400}
dict2 = { 'y': 'Red', 'a':200, 'b':4, 'z': 600}

c={}
for key in dic1:
    if key in dic2:
        c[key]= dic1[key]+dic2[key]
    else:
        c[key] = dic1[key]


print(c)

#how to merge 2 dictonaries having same key:
dic1 = {'a':100, 'b':200, 'c':300}

dic2 = {'a':1030, 'b':2300, 'c':3300}
c ={}
for key in dic1:
    if key in dic2:
        c[key]= dic1[key]+dic2[key]
    else:
        c[key] = dic1[key]

print(c)



#given_dict = { "Normal Skills":[10,15,20], "Ultimate Skill":50 }
given_dict = { "Normal Skills":[10,10,10], "Ultimate Skill":30 }
x= []
for i in given_dict.values():
  x.append(i)
#print(x)
#print(x[0])
total = 0
for i in x[0]:
  total += i
#print(total)

z = x[1]
sum  = total + z
print('Additive Damage Score is', sum)
if sum <= 70:
  print("the agent’s name is “Rage”.")
elif sum > 70 and sum <=100:
  print(" then the agent’s name is “Jett”.")
else:
  print("the agent’s name is “Sage”")

given_dict = { "Normal Skills":[10,10,10], "Ultimate Skill":30 }
x= []
for i in given_dict.values():
  x.append(i)

total = 0
for i in x[0]:
  total += i

z = x[1]
sum  = total + z
print('Additive Damage Score is', sum)
if sum <= 70:
  print("the agent’s name is “Rage”.")
elif sum > 70 and sum <=100:
  print(" then the agent’s name is “Jett”.")
else:
  print("the agent’s name is “Sage”")

given_dict = { "Normal Skills":[10,12,14], "Ultimate Skill":[11,12,56] }
x= []
for i in given_dict.values():
  x.append(i)
print(x)
print(x[1])
z= x[1]
total =0
for i in z:
  total +=i
print(total)

given_dict = { "Normal Skills":[10,10,10], "Ultimate Skill":30 }
x = []
for i in given_dict.values():
  x.append(i)
tot1=0
for i in x[0]:
  tot1+=i
sum= tot1 +x[1]

print('Additive Damage Score is', sum)
if sum <= 70:
  print("the agent’s name is “Rage”.")
elif sum > 70 and sum <=100:
  print(" then the agent’s name is “Jett”.")
else:
  print("the agent’s name is “Sage”")

dict_1 = {"N":(4,9,3),"k":[95,37,197],"F":(32,5,97),"s":[31,94,55]}
#print(dict_1.values())
z=[]
for i in dict_1.values():
  z.append(i)
li1 =[]
for i in z[0]:
  li1.append(i)
print(li1)
prime =[]
for i in li1:
  c=0
  for j in range(1,i):
    if i%j ==0:
      c+=1
  if c==1:
    prime.append(i)
print(prime)

#example task assignemtn 23 cse111 fall 22


class Author:
    def __init__(self, name="none"):

        self.name = name

        self.dict={}

        self.c = 0

    def addBook(self, book, genre):
        if self.name =="none":
            print("A book can not be added without author name")
        self.book = book
        self.genre= genre
        if self.genre not in self.dict:
            self.dict[self.genre]= [self.book]
            self.c+=1
        else:
            if self.book not in self.dict[self.genre]:
                self.dict[self.genre].append(self.book)
                self.c+=1


    def setName(self, name):
        self.name = name

    def printDetail(self):
        print(f"Number of book(s):{self.c}")
        print(f"Auhtor name {self.name}")
        for j, k in self.dict.items():
            print(f"{j}:{','.join(k)}")




a1 = Author()
print("=================================")
a1.addBook("Ice", "Science Fiction")
print("=================================")
a1.setName("Anna Kavan")
a1.addBook("Ice", "Science Fiction")
a1.printDetail()
print("=================================")
a2 = Author("Humayun Ahmed")
a2.addBook("Onnobhubon", "Science Fiction")
a2.addBook("Megher Upor Bari", "Horror")
print("=================================")
a2.printDetail()
a2.addBook("Ireena", "Science Fiction")
print("=================================")
a2.printDetail()
print("=================================")

# Write your code here

class Hotel:
    def __init__(self,hname):
        self.hname  = hname
        self.staffID  = 0
        self.guestID = 0
        self.staffinifo ={}
        self.guestinfo = {}


    def addStuff(self, staffName, staffAge):
        self.staffID +=1
        self.staffName =  staffName
        self.staffAge = staffAge
        if self.staffID not in self.staffinifo:
            self.staffinifo[self.staffID] = [self.staffName]+[self.staffAge]



    def getStuffById(self,staffid):
        self.staffID =staffid
        for j,k in self.staffinifo.items():
            print(f"Number of staff: {j}")
            print(f"Name:{k[0]}")
            print(f"Age: {k[1]}")
            print(f"Phone no:{'000'}")


    def addGuest(self,gustName, guestAge, guestPhone):
        self.gustName =gustName
        self.guestAge =guestAge
        self.guestPhone =guestPhone
        self.guestID +=1
        if self.guestID not in self.guestinfo:
            self.guestinfo[self.guestID] =[self.gustName]+[self.guestAge]+[self.guestPhone]


    def getGuestById(self,guestid):
        self.guestID=guestid
        for j,k in self.guestinfo.items():
            print(f"Number of Guest: {j}")
            print(f"Name:{k[0]}")
            print(f"Age: {k[1]}")
            print(f"Phone: {k[2]}")

    def allStaffs(self):
        print("All staffs:")
        print(f"Number of staff: {self.staffID}")
        for j,k in self.staffinifo.items():
            print(f"Staff ID:{j} Name: {k[0]} Age: {k[1]} Phone no: {k[2]}")

    def allGuest(self):
        print("all Guest")
        print(f"Number of Guest: {self.guestID}")
        for i in range(self.guestID):
            for j,k in self.guestinfo.items():
                print(f"guest ID:{j} Name: {k[0]} Age: {k[1]} Phone no: {k[2]}")



# Do not change the following lines of code.
h = Hotel("Lakeshore")
h.addStuff("Adam", 26)
print("=================================")
print(h.getStuffById(1))
print("=================================")
h.addGuest("Carol",35,"123")
print("=================================")
print(h.getGuestById(1))
print("=================================")
h.addGuest("Diana", 32, "431")
print("=================================")
print(h.getGuestById(2))
print("=================================")
h.allStaffs()
print("=================================")
h.allGuest()